[tool.poetry]
name = "manim-dataflow-analysis"
version = "0.1.0"
description = ""
authors = ["Berg Lucas <55436804+BergLucas@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
manim = "^0.18.1"
networkx = ">=2.6"
types-networkx = ">=2.6"
frozendict = "^2.4.6"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
mypy = "^1.4.1"
coverage = "^7.2.7"
ruff = "^0.6.4"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
test = "python -m unittest -v"
coverage = "coverage run -m unittest -v"
coverage-report = ["coverage", { cmd = "coverage report" }]
coverage-html = ["coverage", { cmd = "coverage html" }]
mypy = "mypy src"
black = "black src"
ruff = "ruff check src"
ruff-fix = "ruff check --fix src"
ruff-ufix = "ruff check --fix --unsafe-fixes src"
lint = ["black", "ruff", "mypy"]

[tool.coverage.run]
relative_files = true
branch = true
source = ["src/image_analyst", "tests"]

[tool.ruff.lint]
select = [
    "D",   # pydocstyle
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "N",   # pep8-naming
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "TCH", # flake8-type-checking
    "Q",   # flake8-quotes
    "PL",  # pylint
]

ignore = ["E203", "D100", "D101", "D104", "D105", "D106", "N818"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true
